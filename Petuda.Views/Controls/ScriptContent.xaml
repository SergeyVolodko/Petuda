<UserControl x:Class="Petuda.Views.Controls.ScriptContent"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:resx="clr-namespace:Petuda.Views.Resources"
             mc:Ignorable="d"
             IsEnabledChanged="ScriptContentEditorPanel_IsEnabledChanged"
             >

    <UserControl.Resources>
        <Storyboard x:Key="ScriptContentEnabled">
            <DoubleAnimation BeginTime="{StaticResource menuMovementTimeSpan}"
                             Storyboard.TargetProperty="(UIElement.Opacity)"
                             Duration="{StaticResource menuMovementDuration}"
                             AccelerationRatio="0.5"
                             DecelerationRatio="0.5"
                             To="1"/>
        </Storyboard>
        <Storyboard x:Key="ScriptContentDisabled">
            <DoubleAnimation BeginTime="00:00:00"
                             Storyboard.TargetProperty="(UIElement.Opacity)"
                             Duration="00:00:00.0000000"
                             To="0"/>
        </Storyboard>
    </UserControl.Resources>

    <UserControl.Style>
        <Style TargetType="{x:Type UserControl}">
            <Style.Triggers>
                <Trigger  Property="IsEnabled" Value="true">
                    <Trigger.ExitActions>
                        <BeginStoryboard Storyboard="{StaticResource ScriptContentDisabled}" />
                    </Trigger.ExitActions>

                    <Trigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource ScriptContentEnabled}" />
                    </Trigger.EnterActions>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Style>

    <Grid x:Name="mainGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Menu Grid.Row="0"
              Name="menuWord" 
              Style="{StaticResource GenerateWorDocumentMenuStyle}"
              IsEnabled="{Binding SelectedScript, Converter={StaticResource isNotNullConverter}}"
              >
            <MenuItem Header="{x:Static resx:Strings.GenerateWordFile}" 
                      FontSize="17" 
                      FontWeight="Normal" 
                      Foreground="{StaticResource AccentColorBrush}"
                      >
                <MenuItem.Icon>
                    <Image Source="/Images/word.ico" 
                           Height="15"
                           Width="15"/>
                </MenuItem.Icon>

                <MenuItem.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Vertical" Background="{StaticResource FillColorBrush}"/>
                    </ItemsPanelTemplate>
                </MenuItem.ItemsPanel>

                <MenuItem Header="{x:Static resx:Strings.WithOutJokeNames}" 
                          Style="{StaticResource MenuItemStyle}"
                          Command="{Binding GenDocWithNoTitlesCommand}"
                          />
                <MenuItem Header="{x:Static resx:Strings.WithJokeNames}"
                          Style="{StaticResource MenuItemStyle}"
                          Command="{Binding GenDocWithTitlesCommand}"
                          />
                <MenuItem Header="{x:Static resx:Strings.OnlyJokeNames}" 
                          Style="{StaticResource MenuItemStyle}"
                          Command="{Binding GenDocOnlyTitlesCommand}"
                          />
            </MenuItem>
        </Menu>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <StackPanel x:Name="stackPanelScriptButtons" IsEnabled="{Binding SelectedScript.IsEditable}">
                <Button x:Name="buttonDecIndex"
                        Style="{StaticResource PetudaButtonStyle}"
                        Command="{Binding DecIndexCommand}"
                        Margin="0,50,0,0"
                        IsEnabled="{Binding DecIndexIsEnabled}"
                        >
                    <Button.Content>
                        <Image Source="/Images/up_arrow.png" 
                           Width="40" 
                           Height="40"/>
                    </Button.Content>
                </Button>

                <Button x:Name="buttonInсIndex" 
                        Style="{StaticResource PetudaButtonStyle}"
                        Command="{Binding IncIndexCommand}"
                        Margin="0,0,0,0"
                        IsEnabled="{Binding IncIndexIsEnabled}"
                        >
                    <Button.Content>
                        <Image Source="/Images/down_arrow.png" 
                           Width="40" 
                           Height="40"/>
                    </Button.Content>
                </Button>

                <Button x:Name="buttonRemoveJoke" 
                        Style="{StaticResource PetudaButtonStyle}"
                        Command="{Binding RemoveJokeFromScriptCommand}"
                        Margin="0,50,0,0"
                        >
                    <Button.ToolTip>
                        <ToolTip>
                            <TextBlock Style="{StaticResource TextBlockToolTipStyle}"
                                       Text="{x:Static resx:Strings.RemoveJokeFromScriptToolTip}"/>
                        </ToolTip>
                    </Button.ToolTip>
                    <Button.Content>
                        <Image Source="/Images/scissor.png" 
                           Width="40" 
                           Height="40"/>
                    </Button.Content>
                </Button>

            </StackPanel>

            <Grid Grid.Column="1">
                <DataGrid x:Name="dataGridJokesInScript"
                          Style="{StaticResource PetudaDataGridStyle}"
                          ItemsSource="{Binding JokesInSelectedScript}"
                          SelectedIndex="{Binding SelectedJokeInScriptIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          ColumnHeaderStyle="{StaticResource DataGridColumnHeaderStyle}"
                          Drop="dataGridJokesInScript_Drop"
                          AllowDrop="{Binding SelectedScript.IsEditable}"
                          PreviewMouseMove="dataGridJokesInScript_PreviewMouseMove"
                          LoadingRow="DataGridJokesInScript_OnLoadingRow"
                          EnableRowVirtualization = "False"
                          CanUserSortColumns="False"
                          MouseDoubleClick="DataGridJokesInScript_OnMouseDoubleClick"
                          KeyUp="DataGridJokesInScript_OnKeyUp">

                    <DataGrid.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="LightBlue" />
                                    <Setter Property="BorderThickness" Value="0" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.CellStyle>
                    
                    <DataGrid.Columns>
                        <DataGridTextColumn Width="40" Header="№" Binding="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=Tag}" />
                        
                        <DataGridTemplateColumn Width="*" Header="{x:Static resx:Strings.Joke}" >
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel MaxHeight="{StaticResource PetudaMaxRowHeight}"
                                                Margin="5">
                                        <Grid Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=DataGridTemplateColumn}}">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width=".6*"/>
                                                <ColumnDefinition Width=".4*"/>
                                            </Grid.ColumnDefinitions>
                                            <Label Content="{Binding Name}"
                                                   Grid.Column="0"
                                                   Style="{StaticResource BasicTextStyle}"
                                                   FontWeight="DemiBold"/>
                                            <Label Content="{Binding Theme}" 
                                                   Grid.Column="1"
                                                   Style="{StaticResource BasicTextStyle}"
                                                   Foreground="{StaticResource AccentColorBrush}"
                                                   HorizontalAlignment="Right"
                                                   ToolTip="{Binding Theme}"/>
                                        </Grid>
                                        <TextBlock Text="{Binding Text}"
                                               Style="{StaticResource BasicTextBlockStyle}"/>
                                    </StackPanel>

                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>

                </DataGrid>
                
                <Rectangle Style="{StaticResource UnderlineDatagridHeader}"
                           Margin="0,40,0,0"/>
            </Grid>
        </Grid>

    </Grid>
</UserControl>
