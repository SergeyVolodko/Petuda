<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>Программа 'Петуда' создана командой КВН МУА для организации работы с материалом команды</value>
  </data>
  <data name="AboutBase" xml:space="preserve">
    <value>Добавлять шутки в базу, а так же редактировать их</value>
  </data>
  <data name="AboutScripts" xml:space="preserve">
    <value>Формировать из шуток сценарии, просто перетягивая шутки из базы в сценарий</value>
  </data>
  <data name="AboutSearch" xml:space="preserve">
    <value>Быстро и удобно находить шутки в базе</value>
  </data>
  <data name="AboutWord" xml:space="preserve">
    <value>Генерироровать Word-файл сформированного сценария</value>
  </data>
  <data name="AddJokeToScriptToolTip" xml:space="preserve">
    <value>Нажмите эту кнопку, чтобы добавить выбранную шутку в открытый в панеле сцанария сценарий</value>
  </data>
  <data name="AddToScript" xml:space="preserve">
    <value>В сценарий</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Отмена</value>
  </data>
  <data name="Change" xml:space="preserve">
    <value>Изменить</value>
  </data>
  <data name="ChangeScriptToolTip" xml:space="preserve">
    <value>Нажмите, чтобы изменить "шапку" открытого сценария</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Создать</value>
  </data>
  <data name="CreateJokeToolTip" xml:space="preserve">
    <value>Нажмите эту кнопку, чтобы добавить новую шутку в базу</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Дата</value>
  </data>
  <data name="DateFilterToolTip" xml:space="preserve">
    <value>Чтобы отфильтровать шутки по дате создания - выбирите нужный временной промежуток</value>
  </data>
  <data name="DateTitle" xml:space="preserve">
    <value>Дата : </value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Удалить</value>
  </data>
  <data name="DeleteJokeToolTip" xml:space="preserve">
    <value>Нажмите эту кнопку, чтобы удалить выбранную шутку из базы, так же эта шутка будет удалена из всех сценариев, в которых она используется</value>
  </data>
  <data name="DeleteScriptToolTip" xml:space="preserve">
    <value>Нажмите, чтобы удалить открытый сценарий</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Редактировать</value>
  </data>
  <data name="EditJokeToolTip" xml:space="preserve">
    <value>Нажмите эту кнопку, чтобы изменить содержимое выбранной шутки, либо просто дважды кликните по шутке в списке</value>
  </data>
  <data name="GameDate" xml:space="preserve">
    <value>Дата игры:</value>
  </data>
  <data name="GameDateTitle" xml:space="preserve">
    <value>Дата игры :</value>
  </data>
  <data name="GenerateWordFile" xml:space="preserve">
    <value>Сгенерировать Word-файл сценария</value>
  </data>
  <data name="Joke" xml:space="preserve">
    <value>Шутка</value>
  </data>
  <data name="JokeEditor" xml:space="preserve">
    <value>Редактор шутки</value>
  </data>
  <data name="JokeRemovingText1" xml:space="preserve">
    <value>Вы действительно хотите удалить шутку:</value>
  </data>
  <data name="JokeRemovingText2" xml:space="preserve">
    <value>Если эта шутка использовалась в каких-либо сценариях, она будет из них удалена.</value>
  </data>
  <data name="JokeRemovingTitle" xml:space="preserve">
    <value>Удаление шутки</value>
  </data>
  <data name="League" xml:space="preserve">
    <value>Лига : </value>
  </data>
  <data name="LeagueFilterToolTip" xml:space="preserve">
    <value>Для того чтобы посмотреть все шутки, которые вы использовали в сценариях той, или иной лиги, выберите имя интересующей лиги. Для того, чтобы посмотреть все шутки, не использованные вами ни в одной лиге - поставьте галочку "Не паленные"</value>
  </data>
  <data name="NameTitle" xml:space="preserve">
    <value>Название : </value>
  </data>
  <data name="New" xml:space="preserve">
    <value>Новый</value>
  </data>
  <data name="NewScriptToolTip" xml:space="preserve">
    <value>Нажмите, чтобы создать новый сценарий</value>
  </data>
  <data name="NotShot" xml:space="preserve">
    <value>Не паленные</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>ОК</value>
  </data>
  <data name="OnlyJokeNames" xml:space="preserve">
    <value>Только названия шуток</value>
  </data>
  <data name="Petuda" xml:space="preserve">
    <value>Петуда</value>
  </data>
  <data name="ProgrammAllows" xml:space="preserve">
    <value>Программа позволяет :</value>
  </data>
  <data name="ReadFileErrorText" xml:space="preserve">
    <value>Не удалось прочитить данные из файла:</value>
  </data>
  <data name="ReadFileErrorTitle" xml:space="preserve">
    <value>Ошибка чтения данных</value>
  </data>
  <data name="Ready" xml:space="preserve">
    <value>Готово</value>
  </data>
  <data name="RemoveJokeFromScriptToolTip" xml:space="preserve">
    <value>Нажмите, чтобы удалить выбранную шутку из текущего сценария</value>
  </data>
  <data name="ScriptEditor" xml:space="preserve">
    <value>Редактор сценария</value>
  </data>
  <data name="ScriptRemovingText" xml:space="preserve">
    <value>Вы действительно хотите удалить сценарий:</value>
  </data>
  <data name="ScriptRemovingTitle" xml:space="preserve">
    <value>Удаление сценария</value>
  </data>
  <data name="Scripts" xml:space="preserve">
    <value>Сценарии</value>
  </data>
  <data name="ScriptsToolTip" xml:space="preserve">
    <value>Кликните, чтобы открыть или закрыть панель сценариев</value>
  </data>
  <data name="ScriptWhat" xml:space="preserve">
    <value>Этап (что):</value>
  </data>
  <data name="ScriptWhen" xml:space="preserve">
    <value />
  </data>
  <data name="ScriptWhere" xml:space="preserve">
    <value>Лига (где):</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Поиск</value>
  </data>
  <data name="SelectExistingScript" xml:space="preserve">
    <value>Выбрать существующий сценарий</value>
  </data>
  <data name="Start" xml:space="preserve">
    <value>Запуск</value>
  </data>
  <data name="Tags" xml:space="preserve">
    <value>Тэги : </value>
  </data>
  <data name="Text" xml:space="preserve">
    <value>Текст : </value>
  </data>
  <data name="TextFilterToolTip" xml:space="preserve">
    <value>При вводе текста в этот поле осуществляется поиск шуток содержащих введённый текст в названии, тексте и тэгах шутки</value>
  </data>
  <data name="Theme" xml:space="preserve">
    <value>Тема</value>
  </data>
  <data name="ThemeFilterToolTip" xml:space="preserve">
    <value>При выборе темы показываются все шутки из базы на эту тему</value>
  </data>
  <data name="ThemeTitle" xml:space="preserve">
    <value>Тема : </value>
  </data>
  <data name="WithJokeNames" xml:space="preserve">
    <value>С названиями шуток</value>
  </data>
  <data name="WithOutJokeNames" xml:space="preserve">
    <value>Без названий шуток</value>
  </data>
  <data name="WriteFileErrorText" xml:space="preserve">
    <value>Не удалось записать данные в файл:</value>
  </data>
  <data name="WriteFileErrorTitle" xml:space="preserve">
    <value>Ошибка записи данных</value>
  </data>
  <data name="ScriptNotSelectedMessageText" xml:space="preserve">
    <value>Не получилось добавить шутку в сценарий, так как сценарий не выбран. Чтобы добавить шутку в сценарий, откройте панель сценариев справа, и откройте в ней нужный сценарий. Затем попробуйте ещё раз</value>
  </data>
  <data name="ScriptNotSelectedTitle" xml:space="preserve">
    <value>Не выбран сценарий</value>
  </data>
  <data name="TagsToolTip" xml:space="preserve">
    <value>Тегами могут быть любые слова, котороые помогут вам найти эту шутку. Тэги разделяются между собой либо пробелом, либо запятой.</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Загрузка...</value>
  </data>
</root>