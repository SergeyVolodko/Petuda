<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BaseIsEmpty" xml:space="preserve">
    <value>Добро пожаловать!
База готова к добавлению шуток. Чтобы записать в базу новую шутку, нажмите на кнопку «Создать». Либо дважды кликните где-нибудь здесь.</value>
  </data>
  <data name="CantWriteFileErrorMessage" xml:space="preserve">
    <value>Не удается сохранить файл «..\Petuda\Data\{0}» на диск. Возможно, папка, в которой находиться файл, защищена от записи.</value>
  </data>
  <data name="DocumentGenerationErrorText" xml:space="preserve">
    <value>Петуде не удалось наладить взаимодействие с вашим MS Word. Эта ошибка может возникать и в случае, если у вас не установелен Word.</value>
  </data>
  <data name="DocumentGenerationErrorTitle" xml:space="preserve">
    <value>Ошибка генерации документа</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Ошибка</value>
  </data>
  <data name="FileNotFound" xml:space="preserve">
    <value>Файл не найден:
{0}</value>
  </data>
  <data name="GameDate" xml:space="preserve">
    <value>Дата игры:</value>
  </data>
  <data name="JokeCantBeDeletedText" xml:space="preserve">
    <value>Данная шутка была замечена хотя бы в одном из уже сыгранных вами сценариев. После того как дата игры сценария прошла – изменения этого сценраия невозможны.</value>
  </data>
  <data name="JokeCantBeDeletedTitle" xml:space="preserve">
    <value>Шутка не может быть удалена из базы</value>
  </data>
  <data name="NoSearchResults" xml:space="preserve">
    <value>Не найдено шуток, удовлетворяющих условиям поиска.
Попробуйте изменить параметры поиска.</value>
  </data>
  <data name="NotSpecified" xml:space="preserve">
    <value>не указана</value>
  </data>
  <data name="RemoveJokeText" xml:space="preserve">
    <value>Вы действительно хотите удалить шутку: {0} ? Если эта шутка использовалась в ещё не сыгранных сценариях, она будет из них удалена.</value>
  </data>
  <data name="RemoveJokeTitle" xml:space="preserve">
    <value>Удаление шутки</value>
  </data>
  <data name="RemoveScriptText" xml:space="preserve">
    <value>Вы действительно хотите удалить сценарий:</value>
  </data>
  <data name="RemoveScriptTitle" xml:space="preserve">
    <value>Удаление сценария</value>
  </data>
  <data name="ScriptContainsJokeText" xml:space="preserve">
    <value>Шутка, которую вы хотите добавить в сценарий уже находится в нём под номером {0}. Если это рефрен, то шутка врдяд ли должна быть полностью идентичной.</value>
  </data>
  <data name="ScriptContainsJokeTitle" xml:space="preserve">
    <value>Данная шутка уже в сенарии</value>
  </data>
  <data name="ScriptIsPlayedMessageText" xml:space="preserve">
    <value>Установленная дата игры выбранного сценария прошла, значит, игра уже состоялась. Изменять, или удалять сыгранные сценарии нельзя – они уже история.</value>
  </data>
  <data name="ScriptIsPlayedTitle" xml:space="preserve">
    <value>Выбранный сценарий уже сыгран</value>
  </data>
  <data name="ScriptNotSelectedMessageText" xml:space="preserve">
    <value>Не получилось добавить шутку в сценарий, так как сценарий не выбран. Чтобы добавить шутку в сценарий – откройте панель сценариев справа, и выберете в ней нужный сценарий. Затем попробуйте ещё раз.</value>
  </data>
  <data name="ScriptNotSelectedTitle" xml:space="preserve">
    <value>Не выбран сценарий</value>
  </data>
  <data name="SelectedGameDateHasExpiredText" xml:space="preserve">
    <value>Выбирая эту дату игры вы перенесёте редактируемый вами сценарий в историю.  Этот сценарий нельзя будет удалить, или изменить. Вы подтверждаете ваш выбор даты?</value>
  </data>
  <data name="SelectedGameDateHasExpiredTitle" xml:space="preserve">
    <value>Выбранная дата игры уже прошла</value>
  </data>
  <data name="UpdateNotificationMessage" xml:space="preserve">
    <value>Внимание! Петуда обнаружила обновление. Хотите его установить?</value>
  </data>
  <data name="UpdateNotificationTitle" xml:space="preserve">
    <value>Вышло обновление {0}</value>
  </data>
</root>